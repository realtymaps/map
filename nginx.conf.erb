daemon off;
worker_processes <%= ENV['NGINX_WORKERS'] || 4 %>;
pid /app/nginx.pid;

events {
	use epoll;
	accept_mutex on;
	worker_connections 1024;
}

http {
  recursive_error_pages on;
  
  gzip on;
  gzip_comp_level 2;
  gzip_min_length 512;

	server_tokens off;

	log_format l2met 'measure#nginx.service=$request_time request_id=$http_x_request_id';
	access_log logs/nginx.access.log l2met;
	error_log logs/nginx.error.log;

	include mime.types;
	default_type application/octet-stream;
	sendfile on;

  # Increase default upload size from 1M to allow uploading larger images.
  client_max_body_size 10M;

	upstream app_server {
		server unix:/tmp/nginx.socket fail_timeout=0;
 	}

	server {
		listen <%= ENV["PORT"] %>;
		server_name _;
		keepalive_timeout 5;

		location / {
		  error_page 502 = @delayed_retry;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://app_server;
		}

    # this is a recursive retry location; nginx will only recurse 10 times before returning a 500 error;
    # this config therefore gives uses (MAX_STARTUP_TIME-45)/10, because we wait 45s before even starting nginx, and
    # then we delay 10 times before hitting the total amount in the environment variable
		location @delayed_retry {
		  error_page 502 = @delayed_retry;
		  delay <%= (ENV["MAX_STARTUP_TIME"].to_f-45)/10 %>s;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_pass http://app_server;
		}
	}
}
