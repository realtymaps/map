
# user  nobody;
worker_processes  4;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
  worker_connections  1024;
}

http {
  include       mime.types;
  # default_type  application/octet-stream;
  proxy_buffering off;

  #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  #                  '$status $body_bytes_sent "$http_referer" '
  #                  '"$http_user_agent" "$http_x_forwarded_for"';

  #access_log  logs/access.log  main;

  sendfile        on;
  tcp_nopush     on;

  #keepalive_timeout  0;
  keepalive_timeout  65;

  gzip  on;

  upstream express {
    server 127.0.0.1:9999;
  }
  upstream frontend {
    server 127.0.0.1:3000;
  }

  server {
    listen      8888;
    server_name localhost 127.0.0.1;

    set $user "nmccready";
    set $home "/Users/$user/code/github/rmaps/mean.coffee";

    #access_log  logs/host.access.log  main;

    location / {
      add_header        Cache-Control public;
      add_header        Cache-Control must-revalidate;
      expires           10m;
      rewrite ^/(.*)/$ /$1 break;
      proxy_pass  http://express;
      # try_files uri uri.js uri.html @scala;
    }

    location /API {
      add_header        Cache-Control public;
      add_header        Cache-Control must-revalidate;
      expires           10m;
      rewrite ^/(.*)/$ /$1 break;
      proxy_pass  http://express;
    }

    location ~* ^/(assets)/ {
      root             '$home/_public/';
      gzip_static on; # to serve pre-gzipped version
      expires           59m;
      rewrite ^/(.*)/$ /$1 break;
      add_header        Cache-Control public;
      add_header        Last-Modified "";
      add_header        ETag "";

      try_files uri @ruby;
      # @ruby/images/$uri.jpg @ruby/images/$uri.gif
      # @ruby/images/$uri;
    }
    # because we need everything else that is a non .{whatever} or non file route to hit scalatra
    # we handle all root resources (non /assets/ resource files here and route to node root)
    location ~* ^.+\.(js|css|woff|ttf|svg|htc|png){
      root             '$home/public/';
      gzip_static on; # to serve pre-gzipped version
      expires           59m;
      rewrite ^/(.*)/$ /$1 break;
      add_header        Cache-Control public;
      add_header        Last-Modified "";
      add_header        ETag "";
      try_files uri @FE;
    }

    location @FE {
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_redirect  off;
      proxy_pass  http://frontend;
    }

    location @BE {
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_redirect  off;
      proxy_pass  http://express;
    }

    location /index {
      proxy_set_header  X-Real-IP  $remote_addr;
      proxy_set_header  X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header  Host $http_host;
      proxy_redirect  off;
      proxy_pass  http://frontend/index.html;
    }
  }
}
