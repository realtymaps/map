#!/bin/bash

# 2 weeks in seconds
export THRESHOLD_WINDOW=$((2*7*24*60*60))
# prefix for remotes
export REMOTE_PREFIX="remotes/origin"
# remote and local branches to exclude from pruning, just in case
export EXCLUDED_BRANCHES="master HEAD"

if [[ "$1" == "" ]]
then
    export EXPECTED_BRANCH_NAME="master"
else
    export EXPECTED_BRANCH_NAME="$1"
fi

# make sure we're on the expected branch
CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
if [[ "$CURRENT_BRANCH" == "" ]]
then
    echo "Must be in a git-tracked directory"
    exit 1
fi
if [[ "$CURRENT_BRANCH" != "$EXPECTED_BRANCH_NAME" ]]
then
    echo "Must be on the $EXPECTED_BRANCH_NAME branch; currently on $CURRENT_BRANCH"
    exit 1
fi


export NOW_EPOCH=`date '+%s'`
export BEFORE_THRESHOLD_EPOCH="$((NOW_EPOCH-THRESHOLD_WINDOW))"

for branch in $(git branch -a --merged|grep -v "\->"|sed s/^..//)
do
    export SKIP="no"
    for exclusion in $EXCLUDED_BRANCHES
    do
        if [[ "$branch" == "$exclusion" || "$branch" == "$REMOTE_PREFIX/$exclusion" ]]
        then
            export SKIP="yes"
            break
        fi
    done
    if [[ "$SKIP" == "yes" ]]
    then
        continue
    fi
    TIMESTAMP="$(git log -1 --pretty=format:"%ci" "$branch")"
    TIMESTAMP_EPOCH=`date -jf '%F %T %z' "$TIMESTAMP" '+%s'`
    if [[ "$TIMESTAMP_EPOCH" < "$BEFORE_THRESHOLD_EPOCH" ]]
    then
        if [[ "${branch:0:14}" == "$REMOTE_PREFIX" ]]
        then
            echo "removing REMOTE: ${branch:15} (last commit: $TIMESTAMP)"
            git push origin ":${branch:15}"
        else
            echo "removing LOCAL: ${branch} (last commit: $TIMESTAMP)"
            git branch -d "$branch"
        fi
    fi
done
