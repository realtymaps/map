

doHerokuSetup () {
    HEROKU_SETTINGS=""
    HK_LOCATION=~/bin/hk
    
    # download a Heroku client
    curl -sL -A "`uname -sp`" https://hk.heroku.com/hk.gz | zcat >$HK_LOCATION && chmod +x $HK_LOCATION
    
    # we have to give our heroku instance creds so it can access config
    echo "retrieving Heroku creds"
    HEROKU_CREDS=`~/bin/hk creds`
    HEROKU_USERNAME=`echo $HEROKU_CREDS | cut -f1 -d' '`
    HEROKU_AUTH_TOKEN=`echo $HEROKU_CREDS | cut -f2 -d' '`
    queueHerokuSetting "HEROKU_USERNAME" "$HEROKU_USERNAME"    
    queueHerokuSetting "HEROKU_AUTH_TOKEN" "$HEROKU_AUTH_TOKEN"
    
    # value needed by ./scripts/stopServe and maybe elsewhere
    queueHerokuSetting "IS_HEROKU" "1"
}

queueHerokuSetting () {
    SETTING_NAME=$1
    DESIRED_VALUE=$2
    
    echo "checking value of Heroku setting: $SETTING_NAME"
    
    CURRENT_SETTING=`heroku config:get $SETTING_NAME --app=$PROJECT`
    if [[ "$CURRENT_SETTING" != "$DESIRED_VALUE" ]]
    then
        echo "current value is '$CURRENT_SETTING', changing to '$DESIRED_VALUE'" 
        HEROKU_SETTINGS="$HEROKU_SETTINGS $SETTING_NAME=$DESIRED_VALUE"
    else
        echo "current value is correct ('$CURRENT_SETTING')"
    fi
}

setQueuedHerokuSettings () {
    if [ -n "$HEROKU_SETTINGS" ]
    then
        echo "setting config values:$HEROKU_SETTINGS"
        heroku config:set $HEROKU_SETTINGS --app=$PROJECT
    fi
}


forkStagingDb () {
    DB_VARIABLE_BASE=$1
    SOURCE_APP_NAME=$2
    
    echo "beginning fork of $DB_VARIABLE_BASE from app: $SOURCE_APP_NAME"
    
    # first de-provision the old fork (if there is one)
    OLD_FORK=`heroku config:get ${DB_VARIABLE_BASE}_VARIABLE --app=$PROJECT`
    OLD_FORK="${OLD_FORK%_URI}"
    OLD_FORK="${OLD_FORK%_URL}"
    if [ -n "$OLD_FORK" ]
    then
        echo "de-provisioning previously forked db: $OLD_FORK"
        heroku addons:remove ${OLD_FORK} --app=$PROJECT --confirm $PROJECT
    else
        echo "no previously forked db to worry about"
    fi
    

    # fork a new copy
    echo "forking new copy of ${DB_VARIABLE_BASE} from ${SOURCE_APP_NAME}"

    # get the db url we want to fork
    SOURCE_DB=`heroku config:get ${DB_VARIABLE_BASE}_VARIABLE --app=$SOURCE_APP_NAME`
    echo "source db name: $SOURCE_DB"
    SOURCE_DB_URL=`heroku config:get ${SOURCE_DB} --app=$SOURCE_APP_NAME`
    echo "source db url: $SOURCE_DB_URL"

    
    exec 5>&1
    FORK_OUTPUT=$(heroku addons:add heroku-postgresql:standard-0 --fork ${SOURCE_DB_URL} --app=$PROJECT|tee >(cat - >&5))
    exec 5>&-
    
    NEW_VARIABLE=`echo "$FORK_OUTPUT" | fgrep 'Attached as' | cut -f3 -d' '`
    
    echo "fork name captured: $NEW_VARIABLE"
    
    # save the value in a config variable so we can remove it later
    # set the value immediately to help eliminate issues from canceled builds
    heroku config:set ${DB_VARIABLE_BASE}_VARIABLE=$NEW_VARIABLE --app=$PROJECT
}
