DELETE FROM view_definitions WHERE view_id = 'property_details';
DELETE FROM view_definitions WHERE view_id = 'property_details_secondary';
DELETE FROM view_definitions WHERE view_id = 'property_details_main';
DELETE FROM view_definitions WHERE view_id = 'valid_mls_listings';

INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details', 'SELECT', '*', NULL);
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details', 'FROM', '{__property_details_secondary__}', 'secondary');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details', 'WHERE', 'dupe_num = 1', NULL);

INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'rm_property_id');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'rm_status');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'close_date');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'owner_name');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'owner_name2');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'acres');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'finished_sqft');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'baths_full');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'baths_half');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'bedrooms');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('property_details', 'INDEX', 'price');
INSERT INTO view_definitions (view_id, clause_type, definition, aux) VALUES ('property_details', 'INDEX', 'geom_polys_raw', 'GIST');

INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_secondary', 'SELECT', '*', NULL);
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_secondary', 'SELECT', 'row_number() OVER (PARTITION BY rm_property_id)', 'dupe_num');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_secondary', 'SELECT', 'CASE WHEN rm_status = ''recently sold'' OR rm_status = ''not for sale'' THEN close_price ELSE ask_price END', 'price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_secondary', 'SELECT', 'CASE WHEN owner_name IS NOT NULL THEN owner_name2_raw ELSE NULL END', 'owner_name2');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_secondary', 'FROM', '{__property_details_main__}', 'main');

INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'parcel.rm_property_id', 'rm_property_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.rm_property_id IS NOT NULL', 'has_mls');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.rm_property_id IS NOT NULL', 'has_tax');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'deed.rm_property_id IS NOT NULL', 'has_deed');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', $q$build_street_address_num('', parcel.sthsnum, '', '')$q$, 'street_address_num');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(build_street_address_name(parcel.stdir, parcel.ststname, parcel.stsuffix, parcel.stquadrant))', 'street_address_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'build_street_address_unit(parcel.stunitprfx, parcel.stunitnum)', 'street_address_unit');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(parcel.stcity)', 'city');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'upper(parcel.ststate)', 'state');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'build_zip(parcel.stzip, parcel.stzip4)', 'zip');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'parcel.geom_polys', 'geom_polys_raw');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'parcel.geom_point', 'geom_point_raw');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'ST_AsGeoJSON(parcel.geom_polys)::JSON', 'geom_polys_json');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'ST_AsGeoJSON(parcel.geom_point)::JSON', 'geom_point_json');
--INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', $q$parcel_status3(mls.status, mls.rm_property_id IS NOT NULL, mls.close_date::DATE, tax.sale_date::DATE, deed.sale_date::DATE, tax.prior_sale_date::DATE, '2 months', now())$q$, 'rm_status');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', $q$parcel_status3(mls.status, mls.rm_property_id IS NOT NULL, mls.close_date::DATE, tax.sale_date::DATE, deed.sale_date::DATE, tax.prior_sale_date::DATE, '2 months', '2014-11-01'::DATE)$q$, 'rm_status');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'GREATEST(mls.close_date::DATE, tax.sale_date::DATE, deed.sale_date::DATE, tax.prior_sale_date::DATE)', 'close_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(COALESCE(build_name(tax.owner_1_first_name__mi, tax.owner_1_last_name), build_name(tax.owner_2_first_name__mi, tax.owner_2_last_name)))', 'owner_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(build_name(tax.owner_2_first_name__mi, tax.owner_2_last_name))', 'owner_name2_raw');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'build_street_address_num(tax.mail_house_number_prefix, tax.mail_house_number, tax.mail_house_number_2, tax.mail_house_number_suffix)', 'owner_street_address_num');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(build_street_address_name(tax.mail_direction, tax.mail_street_name, tax.mail_mode, tax.mail_quadrant))', 'owner_street_address_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', $q$build_street_address_unit('', tax.mail_apartment_unit_number)$q$, 'owner_street_address_unit');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(tax.mail_city)', 'owner_city');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'upper(tax.mail_state)', 'owner_state');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'build_zip(tax.mail_zipcode, NULL)', 'owner_zip');        
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(tax.tax_amount / 100, mls.taxes)::FLOAT', 'annual_tax');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.tax_desc', 'tax_desc');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'property_indication_category(tax.property_indicator_code)', 'property_indication_category');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'property_indication_name(tax.property_indicator_code)', 'property_indication_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.zoning', 'zoning');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.year_built', 'year_built');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.effective_year_built', 'year_modified');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.acres::NUMERIC, 0.0), nullif(tax.acres::NUMERIC, 0.0)/10000)::FLOAT', 'acres');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.approx_living_area::INTEGER, 0), nullif(tax.living_square_feet::INTEGER, 0))', 'finished_sqft');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.baths_full::INTEGER, 0), nullif(tax.full_baths::INTEGER, 0))', 'baths_full');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.baths_half::INTEGER, 0), nullif(tax.half_baths::INTEGER, 0))', 'baths_half');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.baths_total::INTEGER, 0), nullif(tax.total_baths/100::INTEGER, 0))', 'baths_total');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.beds_total::INTEGER, 0), nullif(tax.bedrooms::INTEGER, 0))', 'bedrooms');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'nullif(mls.current_price::INTEGER,0)', 'ask_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'nullif(tax.prior_sale_amount::INTEGER,0)', 'prior_sale_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.prior_sale_date::DATE', 'prior_sale_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'nullif(mls.original_list_price::INTEGER,0)', 'original_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'get_most_recent_associated(mls.close_date::DATE, tax.sale_date::DATE, deed.sale_date::DATE, tax.prior_sale_date::DATE, nullif(mls.close_price::INTEGER,0), nullif(tax.sale_amount::INTEGER,0), nullif(deed.sale_amount::INTEGER,0), nullif(tax.prior_sale_amount::INTEGER,0))', 'close_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.close_date::DATE', 'mls_close_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'nullif(mls.close_price::INTEGER,0)', 'mls_close_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(tax.sale_date::DATE, deed.sale_date::DATE)', 'sale_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(tax.sale_amount::INTEGER,0),nullif(deed.sale_amount::INTEGER,0))', 'sale_price');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'deed.mortgage_amount', 'mortgage_amount');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.created_date::DATE', 'listing_start_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'make_negative_num_null(mls.close_date::DATE - mls.created_date::DATE)', 'listing_age_days');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'deed.mortgage_date', 'mortgage_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'deed.recording_date', 'recording_date');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(COALESCE(tax.title_company_name, deed.title_company_name))', 'title_company_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(mls.building_desc)', 'building_desc');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(mls.building_design)', 'building_design');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(mls.development_name)', 'development_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.equipment', 'equipment'); -- Garage, Dryer.. etc
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.garage_spaces', 'garage_spaces');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.garage_desc', 'garage_desc');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.heat', 'heat');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'nullif(mls.hoa_fee::NUMERIC,0.00)', 'hoa_fee');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.hoa_fee_freq', 'hoa_fee_freq');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.list_agent_mui', 'list_agent_mui_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.list_agent_mlsid', 'list_agent_mls_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.list_agent_direct_work_phone', 'list_agent_phone');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(mls.list_agent_full_name)', 'list_agent_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.selling_agent_mui', 'selling_agent_mui_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.selling_agent_mlsid', 'selling_agent_mls_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.selling_office_phone', 'selling_agent_phone');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'initcap(mls.selling_agent_full_name)', 'selling_agent_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.matrix_unique_id', 'matrix_unique_id');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.mls', 'mls_name');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.sewer', 'sewer');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(tax.total_value_calculated::INTEGER,0), nullif(tax.assd_total_value::INTEGER,0))', 'assessed_value');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'tax.assessed_year', 'assessed_year');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'mls.property_information', 'property_information');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(tax.land_square_footage::INTEGER,0))', 'land_square_footage');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(mls.lot_frontage::INTEGER,0), nullif(tax.front_footage::INTEGER,0))', 'lot_front_footage');
INSERT INTO view_definitions (view_id, clause_type, definition, name) VALUES ('property_details_main', 'SELECT', 'COALESCE(nullif(tax.depth_footage::INTEGER,0))', 'depth_footage');

INSERT INTO view_definitions (view_id, clause_type, definition, name, aux, ordering) VALUES ('property_details_main', 'FROM', 'parcels', 'parcel', NULL, 1);
INSERT INTO view_definitions (view_id, clause_type, definition, name, aux, ordering) VALUES ('property_details_main', 'FROM', 'LEFT OUTER JOIN {__valid_mls_listings__}', 'mls', 'parcel.rm_property_id = mls.rm_property_id', 2);
INSERT INTO view_definitions (view_id, clause_type, definition, name, aux, ordering) VALUES ('property_details_main', 'FROM', 'LEFT OUTER JOIN corelogic_tax', 'tax', 'parcel.rm_property_id = tax.rm_property_id', 3);
INSERT INTO view_definitions (view_id, clause_type, definition, name, aux, ordering) VALUES ('property_details_main', 'FROM', 'LEFT OUTER JOIN corelogic_deed', 'deed', 'parcel.rm_property_id = deed.rm_property_id', 4);

INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('valid_mls_listings', 'SELECT', '*');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('valid_mls_listings', 'FROM', 'mls_listings');
INSERT INTO view_definitions (view_id, clause_type, definition) VALUES ('valid_mls_listings', 'WHERE', 'rm_valid = TRUE');

SELECT dirty_materialized_view('property_details', FALSE);
